{
	"info": {
		"_postman_id": "4f8c29cc-1b6b-41ef-9168-18fdac82a3c8",
		"name": "flask_upload_media",
		"description": "Rest API that allows to upload videos, images and avatars for each users",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "register user",
			"request": {
				"method": "POST",
				"header": [
					{
						"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"test\",\n    \"firstname\": \"test\",\n    \"lastname\": \"test\",\n    \"email\": \"test@gmail.com\",\n    \"password\": \"test\"\n}"
				},
				"url": {
					"raw": "{{basepath}}/register/",
					"host": [
						"{{basepath}}"
					],
					"path": [
						"register",
						""
					]
				},
				"description": "Endpoint that allows to register an user to the platform"
			},
			"response": []
		},
		{
			"name": "login user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"access_token not empty\", function (){",
							"    pm.expect(jsonData.access_token).not.eql(undefined);",
							"});",
							"",
							"pm.test(\"refresh_token not empty\", function() {",
							"    pm.expect(jsonData.refresh_token).not.eql(undefined);",
							"});",
							"",
							"// set access_token in environment",
							"if (jsonData.access_token != undefined) {",
							"    pm.environment.set(\"access_token\", jsonData.access_token);",
							"} else {",
							"    pm.environment.unset(\"access_token\");",
							"}",
							"",
							"// set refresh_token in environment",
							"if (jsonData.refresh_token != undefined) {",
							"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
							"} else {",
							"    pm.environment.unset(\"refresh_token\");",
							"}",
							"",
							"pm.test(\"Response time is less than 200ms\", function() {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"ciap\",\n    \"password\": \"fra\"\n}"
				},
				"url": {
					"raw": "{{basepath}}/login/",
					"host": [
						"{{basepath}}"
					],
					"path": [
						"login",
						""
					]
				},
				"description": "Log in a user in the platform"
			},
			"response": []
		},
		{
			"name": "upload image",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer ",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "image",
							"type": "file",
							"src": []
						}
					]
				},
				"url": {
					"raw": "{{basepath}}/upload_image/",
					"host": [
						"{{basepath}}"
					],
					"path": [
						"upload_image",
						""
					]
				},
				"description": "Allows users to upload an image"
			},
			"response": []
		},
		{
			"name": "upload video",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer ",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "video",
							"type": "file",
							"src": []
						}
					]
				},
				"url": {
					"raw": "{{basepath}}/upload_video/",
					"host": [
						"{{basepath}}"
					],
					"path": [
						"upload_video",
						""
					]
				},
				"description": "Allows users to upload a video"
			},
			"response": []
		},
		{
			"name": "avatar upload",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer ",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "avatar",
							"type": "file",
							"src": []
						}
					]
				},
				"url": {
					"raw": "{{basepath}}/upload_avatar/",
					"host": [
						"{{basepath}}"
					],
					"path": [
						"upload_avatar",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "get image",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer ",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{basepath}}/image/filename/",
					"host": [
						"{{basepath}}"
					],
					"path": [
						"image",
						"filename",
						""
					],
					"query": [
						{
							"key": "Authorization",
							"value": "",
							"disabled": true
						}
					]
				},
				"description": "allows an user to retrieve an image\n"
			},
			"response": []
		},
		{
			"name": "get avatar",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{basepath}}/avatar/",
					"host": [
						"{{basepath}}"
					],
					"path": [
						"avatar",
						""
					]
				},
				"description": "Allows users to get their avatars"
			},
			"response": []
		},
		{
			"name": "get images",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer ",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{basepath}}/images/",
					"host": [
						"{{basepath}}"
					],
					"path": [
						"images",
						""
					]
				},
				"description": "Allows an user to see all images"
			},
			"response": []
		},
		{
			"name": "get videos",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{basepath}}/videos/",
					"host": [
						"{{basepath}}"
					],
					"path": [
						"videos",
						""
					]
				},
				"description": "Allows users to see each video in their media store"
			},
			"response": []
		},
		{
			"name": "delete image",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer ",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{basepath}}/image/filename/",
					"host": [
						"{{basepath}}"
					],
					"path": [
						"image",
						"filename",
						""
					]
				},
				"description": "Allow users to delete a specific image by filename"
			},
			"response": []
		}
	]
}